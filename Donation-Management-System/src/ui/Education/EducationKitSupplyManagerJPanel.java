/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Education;

import Configuration.EcoSystem;
import Donation.Enterprise.Enterprise;
import Donation.Network.Network;
import Donation.Organization.Organization;
import Donation.UserAccount.UserAccount;
import java.text.SimpleDateFormat;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Donation.Organization.Organization;
import Donation.WorkQueue.WorkQueue;
import Donation.WorkQueue.WorkRequest;
import Donation.WorkQueue.EducationKitSupplyWorkRequest;
import javax.swing.JOptionPane;


/**
 *
 * @author reeteshkesarwani
 */
public class EducationKitSupplyManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EducationKitSupplyManagerJPanel
     */
        private static JPanel jPanel;
    private static UserAccount userAccount;
    private static EcoSystem ecosystem;
    private static Network network;
    private static Enterprise enterprise;
    private static Organization organization;

    public EducationKitSupplyManagerJPanel() {
    }
    public EducationKitSupplyManagerJPanel(EcoSystem ecosystem, Network network, Organization organization,Enterprise enterprise, JPanel jPanel, UserAccount userAccount) {
        initComponents();
         this.ecosystem = ecosystem;
        this.network = network;
        this.enterprise = enterprise;
        this.organization=organization;
        this.jPanel = jPanel;
        this.userAccount = userAccount;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        kitSupplyManagertable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Education Kit Supply Manager ");

        jLabel2.setText("Incoming Kits ");

        jButton1.setText("Accept");

        kitSupplyManagertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Quantity", "Donar Name", "Source", "Status"
            }
        ));
        jScrollPane1.setViewportView(kitSupplyManagertable);

        jButton2.setText("Accept");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(368, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(394, 394, 394))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jButton2)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(164, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         int selectedRow = kitSupplyManagertable.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest req = (WorkRequest) kitSupplyManagertable.getValueAt(selectedRow, 0);
            if (req.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already completed.");
                return;
            }
            else if (req.getStatus().equalsIgnoreCase("Forwarded to Charity Organization")) {
                JOptionPane.showMessageDialog(null, "Request is already forwarded to the Donation organization.");
                return;
            }
            else {
                if (req instanceof EducationKitSupplyWorkRequest) {
                    EducationKitSupplyWorkRequest fundRequest = (EducationKitSupplyWorkRequest) kitSupplyManagertable.getValueAt(selectedRow, 0);
//                    
//                    int quantity = fundRequest.getQuanity();
//                    int totalKits = animalWelfareInventoryOrg.getTotalKits() + quantity;
//                    animalWelfareInventoryOrg.setTotalKits(totalKits);
//                    txtTotalKits.setText(String.valueOf(animalWelfareInventoryOrg.getTotalKits()));
                }
                req.setReceiver(userAccount);
                req.setStatus("Forwarded to Donation Organization");
                populateTable();
                JOptionPane.showMessageDialog(null, "Request is forwarded to the Donation organization");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to accept.");
            return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable kitSupplyManagertable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
       DefaultTableModel model = (DefaultTableModel) kitSupplyManagertable.getModel();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

        model.setRowCount(0);

        if (organization.getWorkQueue() == null) {
            organization.setWorkQueue(new WorkQueue());
        }
        for (WorkRequest wr : organization.getWorkQueue().getWorkReqList()) {

            if (wr instanceof  EducationKitSupplyWorkRequest) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = wr;
                row[1] = formatter.format(((EducationKitSupplyWorkRequest) wr).getRequestDateTime());
                row[2] = ((EducationKitSupplyWorkRequest) wr).getKitCount();
                row[3] = ((EducationKitSupplyWorkRequest) wr).getName();
                row[4] = ((EducationKitSupplyWorkRequest) wr).getType();
                row[5] = ((EducationKitSupplyWorkRequest) wr).getStatus();

                model.addRow(row);
            }
        }
    }
}
